{"version":3,"sources":["gifnewlogo.gif","sunnyDay.jpg","NewUserModal.js","ModalSupport.js","autoComplete.js","Navigator.js","apiCall.js","BodyHead.js","Form.js","FetchLocation.js","WeatherComp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NewUserModal","useState","show","setShow","handleClose","Button","data-dismiss","className","style","backgroundColor","border","color","margin","padding","onClick","href","Modal","size","onHide","Header","closeButton","Title","Body","htmlFor","type","id","placeholder","Footer","float","variant","LoginModal","autoComplete","Navigator","paddingBottom","src","require","height","width","paddingRight","alt","data-toggle","data-target","ApiCall","props","state","location","temp","desc","iconUrl","requestWeather","bind","updatesDOM","document","title","console","log","URL","this","fetch","then","response","json","data","cod","setState","name","Math","round","main","weather","description","toUpperCase","slice","retrieveData","city","React","Component","handleScriptLoad","updateQuery","autoCompleteRef","window","google","maps","places","Autocomplete","current","setFields","addListener","handlePlaceSelect","a","addressObject","getPlace","query","address_components","long_name","getNewCity","SearchLocationInput","setQuery","useRef","useEffect","url","callback","script","createElement","readyState","onreadystatechange","onload","getElementsByTagName","appendChild","loadScript","ref","onChange","event","target","value","BodyHead","paddingTop","FetchLocation","latitude","lat","longitude","long","WeatherComp","getCity","fields","dataObj","currentComponent","navigator","geolocation","getCurrentPosition","position","coords","cityData","results","fontWeight","key","App","cityName","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.87eec760.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gifnewlogo.a75990e2.gif\";","module.exports = __webpack_public_path__ + \"static/media/sunnyDay.67014639.jpg\";","import React, {useState} from 'react';\nimport {Button, Modal} from \"react-bootstrap\";\nimport LoginModal from './ModalSupport'\n\nconst NewUserModal = () => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button data-dismiss= \"modal\" className=\" btn btn-primary-outline\" style={{backgroundColor: \"transparent\",\n        border: \"none\", color: \"#666666\", margin: \"0\", padding: \"0\"}}  onClick={handleShow}>\n        <a href={\"#\"} style= {{color: \"#666666\"}}>Sign up now! </a>\n      </Button>\n\n      <Modal size = \"lg\" show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>SignUp</Modal.Title>\n        </Modal.Header>\n        {/* eslint-disable-next-line react/no-unescaped-entities */}\n        <Modal.Body>\n          <form>\n            <div className=\"form-row\">\n              <div className=\"form-group col-sm-4\">\n                <label className=\"sr-only\" htmlFor=\"exampleInputEmail3\">Email address</label>\n                <input type=\"email\" className=\"form-control form-control-sm mr-1\"\n                       id=\"exampleInputEmail3\"\n                       placeholder=\"Enter email\"/>\n              </div>\n              <div className=\"form-group col-sm-4\">\n                <label className=\"sr-only\" htmlFor=\"exampleInputPassword3\">Password</label>\n                <input type=\"password\" className=\"form-control form-control-sm mr-1\"\n                       id=\"exampleInputPassword3\"\n                       placeholder=\"Password\"/>\n              </div>\n              <div className=\"col-sm-auto\">\n                <div className=\"form-check\">\n                  <input className=\"form-check-input\" type=\"checkbox\"/>\n                  <label className=\"form-check-label\"> Remember me\n\n\n                  </label>\n\n                </div>\n              </div>\n            </div>\n          </form>\n        </Modal.Body>\n        <Modal.Footer className={\"loginFooter\"} >\n          <span className={\"helpmeplease\"} style={{float: \"left\"}}>Already a member?<span><LoginModal/></span></span>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n          </Button>\n\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\nexport default NewUserModal;","import React, {useState} from 'react';\nimport {Button, Modal} from \"react-bootstrap\";\nimport NewUserModal from './NewUserModal'\n\n\n\nfunction LoginModal() {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button data-dismiss= \"modal\" className=\"fa fa-sign-in btn btn-primary-outline\" style={{backgroundColor: \"transparent\",\n        border: \"none\", color: \"#000\"}}  onClick={handleShow}>\n        Login\n      </Button>\n\n      <Modal size = \"lg\" show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Login</Modal.Title>\n        </Modal.Header>\n        {/* eslint-disable-next-line react/no-unescaped-entities */}\n        <Modal.Body>\n          <form>\n            <div className=\"form-row\">\n              <div className=\"form-group col-sm-4\">\n                <label className=\"sr-only\" htmlFor=\"exampleInputEmail3\">Email address</label>\n                <input type=\"email\" className=\"form-control form-control-sm mr-1\"\n                       id=\"exampleInputEmail3\"\n                       placeholder=\"Enter email\"/>\n              </div>\n              <div className=\"form-group col-sm-4\">\n                <label className=\"sr-only\" htmlFor=\"exampleInputPassword3\">Password</label>\n                <input type=\"password\" className=\"form-control form-control-sm mr-1\"\n                       id=\"exampleInputPassword3\"\n                       placeholder=\"Password\"/>\n              </div>\n              <div className=\"col-sm-auto\">\n                <div className=\"form-check\">\n                  <input className=\"form-check-input\" type=\"checkbox\"/>\n                  <label className=\"form-check-label\"> Remember me\n\n\n                  </label>\n\n                </div>\n              </div>\n            </div>\n          </form>\n        </Modal.Body>\n        <Modal.Footer className={\"loginFooter\"} >\n          <span className={\"helpmeplease\"} style={{color: \"#666666\"}}>Not a member? <span>  <NewUserModal/></span></span>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n          </Button>\n\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\nexport default LoginModal;","import React, {useState, useEffect, useRef} from \"react\";\nimport \"./App.css\";\nimport ApiCall from \"./apiCall\";\n\nlet autoComplete;\n\nlet finalCityObj;\n\nconst loadScript = (url, callback) => {\n    let script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n\n    if (script.readyState) {\n        script.onreadystatechange = function () {\n            if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\n                script.onreadystatechange = null;\n                callback();\n            }\n        };\n    } else {\n        script.onload = () => callback();\n    }\n\n    script.src = url;\n    document.getElementsByTagName(\"head\")[0].appendChild(script);\n};\n\nfunction handleScriptLoad(updateQuery, autoCompleteRef, props) {\n    autoComplete = new window.google.maps.places.Autocomplete(\n        autoCompleteRef.current,\n        {}\n    );\n    autoComplete.setFields([\"address_components\", \"formatted_address\"]);\n    autoComplete.addListener(\"place_changed\", () =>\n        handlePlaceSelect(updateQuery, props)\n    );\n}\n\nasync function handlePlaceSelect(updateQuery, props) {\n    const addressObject = autoComplete.getPlace();\n    const query = addressObject.address_components[0].long_name;\n    updateQuery(query);\n    console.log(\"obj\", addressObject);\n    props.getNewCity(addressObject)\n\n}\n\nfunction SearchLocationInput(props) {\n    const [query, setQuery] = useState(\"\");\n    const autoCompleteRef = useRef(null);\n\n    useEffect(() => {\n        loadScript(\n            `https://maps.googleapis.com/maps/api/js?key=AIzaSyCYZkaeVMNqESomLAQEnR2CH3l9JBHOalE&libraries=places`,\n            () => handleScriptLoad(setQuery, autoCompleteRef, props)\n        );\n    }, []);\n\n    return (\n        <div>\n            <div className=\"search-location-input\" style={{margin: \"auto\"}}>\n                <input\n                    ref={autoCompleteRef}\n                    onChange={event => setQuery(event.target.value)}\n                    onClick={event => console.log(\"The clicked event is: \", event.target.value)}\n                    placeholder=\"Enter a City\"\n                    value={query}\n                />\n            </div>\n            <div>\n                <small>We'll soon include GeoLocation features.</small><br/>\n                <button type=\"submit\" className=\"btn btn-primary col-md-5\">\n                    Submit\n                </button>\n            </div>\n        </div>\n    );\n\n}\n\nexport default SearchLocationInput;","import React, {useState} from 'react';\nimport LoginModal from './ModalSupport';\nconst Navigator = () => {\n  return (\n    <div>\n      <nav className=\"navbar navbar-light navbar-expand-sm fixed-top\" style={{paddingBottom: \"0px\"}}>\n        <div className=\"container logocontainer\">\n          <a href=\"./redoIndex.html\"><img src={require(\"./gifnewlogo.gif\")} height=\"40px\" width=\"160px\" id=\"logoimg\"\n                                          style={{paddingRight: \"20px\"}} alt=\"logo new gif\"/></a>\n          <button className=\"navbar-toggler \" type=\"button\" data-toggle=\"collapse\" data-target=\"#Navbar\">\n            <span id=\"toggler\" className=\"navbar-toggler-icon newbutton\"></span>\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"Navbar\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\"><a className=\"nav-link\" href=\"./weather.html\"><span\n                className=\"fa fa-home fa-lg\"></span> Home</a></li>\n              <li className=\"nav-item\"><a className=\"nav-link\" href=\"./aboutus.html\"><span\n                className=\"fa fa-info fa-lg\"></span> About</a></li>\n              <li className=\"nav-item\"><a className=\"nav-link\" href=\"#\"><span\n                className=\"fa fa-list fa-lg\"></span> Menu</a>\n              </li>\n              <li className=\"nav-item\"><a className=\"nav-link\" href=\"./contactus.html\"><span\n                className=\"fa fa-address-card fa-lg\"></span> Contact</a></li>\n              <li className=\"nav-item active\"><a className=\"nav-link\" href=\"weather.html\"><span\n                className=\"fa fa-sun-o fa-lg\"></span> Weather</a></li>\n            </ul>\n            <span className=\"navbar-text\">\n                            <a data-toggle=\"modal\" data-target=\"#loginModal\">\n                                 <LoginModal/>\n                            </a>\n                        </span>\n          </div>\n        </div>\n      </nav>\n    </div>\n\n  );\n};\nexport default Navigator();","import React from \"react\";\n\nclass ApiCall extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            location: \"\",\n            temp: \"\",\n            desc: \"\",\n            iconUrl: \"\"\n        }\n        this.requestWeather = this.requestWeather.bind(this)\n        this.updatesDOM = this.updatesDOM.bind(this)\n    }\n\n    requestWeather(location) {\n        document.title = \"Weather Today in \" + location;\n        console.log(\"WEATHER TODAY IN : \", location)\n        let URL = \"https://api.openweathermap.org/data/2.5/weather?q=\" + this.state.location + \"&units=metric&apikey=8b7577d7723ec100328f966bbf6fd7fc\";\n        fetch(URL)\n            .then(response => response.json())\n            .then((data) => {\n                this.updatesDOM(data)\n            })\n    }\n\n    updatesDOM(data) {\n\n        console.log(\"THE OBJECT IS:::::\", data);\n        if (data.cod !== \"400\") {\n\n            let icontemp = \"https://visualpharm.com/assets/756/Sun-595b40b65ba036ed117d3468.svg\"\n            // var finalIconUrl = \"http://openweathermap.org/img/w/\" + icontemp + \".png\";\n            this.setState({\n                location: data.name,\n                temp: Math.round(data.main.temp),\n                desc: data.weather[0].description[0].toUpperCase() + data.weather[0].description.slice(1),\n                iconUrl: icontemp\n            })\n            this.props.retrieveData(this.state)\n        }\n\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.city !== state.location) {\n            return {\n                location: props.city,\n            };\n        }\n\n        // Return null if the state hasn't changed\n        return null;\n    }\n\n     componentDidMount()\n     {\n         /*if(this.props.city !== this.state.location) {\n             console.log(\"came in here\")\n             this.setState({\n                     location: this.props.city\n                 }\n             )*/\n             console.log(\"I also got the city\", this.props.city)\n             console.log(\"I'm setting the city \" + this.props.city + \" to the state as: \" + this.state.location)\n             fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\" + this.state.location + \"&units=metric&apikey=637e3c2f05207c3a2db1deebc503f4a0\")\n                 .then(response => response.json())\n                 .then((data) => {\n                     console.log(data)\n                     this.updatesDOM(data)\n\n                 })\n\n\n\n\n\n\n         }\n\n\n    /*if(this.state.location !== this.props.city) {\n        /!*this.setState({\n                location: this.props.city\n            }\n        )*!/\n        console.log(\"I'm setting the city \"+this.props.city+ \"to the state as: \"+this.state.location)\n        if(this.state.location !== undefined ) {\n            console.log(\"I'm passing the following location: \", this.state.location)\n            this.requestWeather(this.state.location)\n        }\n    }*/\n\n    render() {\n\n\n        console.log(\"I got the city: \"+ this.props.city+\" and I'm gonna set it to: \"+this.state.location)\n        /*if(this.props.city !== this.state.location)\n            this.setState(\n                {\n                    location: this.props.city\n                }\n            )*/\n\n        return (\n            <div>\n\n                {console.log(\"APICALL just RAN with the city name: \", this.state.location)}\n            </div>\n        )\n    }\n}\n\nexport default ApiCall;","import React from \"react\";\n\nconst BodyHead = () => {\n    return(\n        <div>\n            <header className=\"jumbotron\" style={{paddingBottom: \"0 px\"}}>\n                <div className=\"container\" style={{paddingTop: \"0 px\"}}>\n                    <div className=\"row row-header\">\n                        <div className=\"col-12 col-sm-6\">\n                            <h1>Weather Today</h1>\n                            {/* eslint-disable-next-line react/no-unescaped-entities */}\n                            <p>This segment of the website displays location's weather using a web API from\n                                openweathermap!</p>\n\n                        </div>\n\n                    </div>\n                </div>\n            </header>\n        </div>\n    )\n}\n\nexport default BodyHead;","import React from \"react\";\n\nclass Form extends React.Component{\n    constructor() {\n        super();\n        this.state = {\n            location: \"\"\n        }\n    }\n    submitHandler(e){\n        e.preventDefault()\n        this.props.getCity(this.state.location);\n    }\n    render() {\n        return(\n            <div id=\"cityForm\">\n                <form id=\"nameform\">\n\n                    <div  className=\"form-group\">\n                        <label htmlFor=\"location\" >CityName</label><br/>\n                        <input className=\"form-control col-md-6 offset-md-3\" id=\"CityName\" value={this.state.location} placeholder={\"Enter Location\"} onChange={e => this.setState({location: e.target.value})}/>\n                        <small className=\"form-text text-muted\">We'll soon include dropdown support.</small>\n                    </div>\n\n                    <button type=\"submit\"  className=\"btn btn-primary col-md-5\" onClick={(e) => this.submitHandler(e)}>Submit</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Form;","import React from \"react\";\n\nclass FetchLocation extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            location: \"\",\n            latitude: this.props.lat,\n            longitude: this.props.long\n        }\n\n    }\n\n    componentDidMount() {\n        console.log(\"LAt and long: \",this.state.longitude, this.state.latitude)\n        fetch(\"https://maps.googleapis.com/maps/api/geocode/json?\"+this.props.lat+\" \"+this.props.long+\"=40.714224,-73.961452&key=AIzaSyCYZkaeVMNqESomLAQEnR2CH3l9JBHOalE\")\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"The location from lat and long is: \", data)\n            })\n    }\n\n\n    render() {\n        return (\n            <div>\n\n            </div>\n        );\n    }\n\n\n}\n\nexport default FetchLocation;","import React from \"react\";\nimport SearchLocationInput from \"./autoComplete\";\nimport Form from './Form'\nimport BodyHead from \"./BodyHead\";\nimport ApiCall from \"./apiCall\";\nimport FetchLocation from \"./FetchLocation\";\n\nclass WeatherComp extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            location: \"\",\n            temp: \"\",\n            desc: \"\",\n            iconUrl: \"\",\n            dataObj: \"\"\n        }\n    }\n\n    componentDidMount() {\n        let currentComponent = this\n        navigator.geolocation.getCurrentPosition(function (position) {\n          console.log(\"Latitude is :\", position.coords.latitude);\n            console.log(\"Longitude is :\", position.coords.longitude);\n            let URL = \"https://maps.googleapis.com/maps/api/geocode/json?latlng=\"+position.coords.latitude+\",\"+position.coords.longitude+\"&key=AIzaSyCI3Rpo_03gKdVow10kkbQMSeIpzFSB89c\"\n                console.log(URL)\n            fetch(URL)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"The location from lat and long is: \", data)\n                    let cityData = data.results[5].address_components[1].long_name\n                    currentComponent.setState({\n                        location: cityData\n                    })\n\n\n                })\n\n\n\n        });\n\n    }\n\n\n    getCity = fields => {\n        console.log(\"App component got the city: \", fields)\n        this.setState(\n            {location: fields}\n        )\n    }\n\n    getNewCity = fields => {\n        console.log(\"App component got the obj: \", fields)\n        this.getCity(fields.address_components[0].long_name)\n    }\n\n    retrieveData = dataObj => {\n        console.log(\"The api object inside main is: \", dataObj)\n        this.setState(\n            {\n                location: dataObj.location,\n                temp: dataObj.temp,\n                desc: dataObj.desc,\n                iconUrl: dataObj.iconUrl\n            }\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <BodyHead/>\n                <div className=\"container1\" style={{paddingTop: \"20px\"}}>\n                    <div className=\"geoType\">\n                        <h3>User GeoLocation Based Weather</h3>\n                        Please allow location access in order to access this feature.\n\n                        <FetchLocation lat={this.state.latitude} long={this.state.longitude}/>\n\n                        <div>\n                            <h2 className=\"city\">{this.state.location}</h2>\n                            <div className=\"middle\">\n                                <img src={require('./sunnyDay.jpg')} alt={this.state.iconUrl} id=\"icon\" height=\"50px\"/>\n                                <div className=\"degrees\">\n                                    <h1 id=\"temp\">{this.state.temp}</h1>\n                                    <span>&#176;</span>\n                                </div>\n                                <h3 id=\"desc\" style={{fontWeight: \"lighter\"}}>{this.state.desc}</h3>\n                            </div>\n                        </div>\n                    </div>\n                    {/*<Form getCity={fields => this.getCity(fields)}/>*/}\n                </div>\n                <div className=\"container1 cityType col-md-6\">\n                    <SearchLocationInput getNewCity={fields => this.getNewCity(fields)}/>\n\n                    {\n                        (this.state.location !== \"\") &&\n                        <ApiCall city={this.state.location} key={this.state.location}\n                                 retrieveData={dataObj => this.retrieveData(dataObj)}/>\n\n                    }\n\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default WeatherComp;","import React from 'react';\nimport Navigator from './Navigator'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport './styles.css';\nimport WeatherComp from './WeatherComp'\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            cityName : \"\"\n        }\n    }\n    render() {\n        return (\n            <div className=\"App\">\n\n                {/*<button onClick={minusOperator}>-</button>\n            <h2 id={\"num\"}>0</h2>\n            <button onClick={plusOperator}>+</button>*/}\n                {Navigator}\n                <WeatherComp />\n\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}